// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CatRescued extends ethereum.Event {
  get params(): CatRescued__Params {
    return new CatRescued__Params(this);
  }
}

export class CatRescued__Params {
  _event: CatRescued;

  constructor(event: CatRescued) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get catId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class CatNamed extends ethereum.Event {
  get params(): CatNamed__Params {
    return new CatNamed__Params(this);
  }
}

export class CatNamed__Params {
  _event: CatNamed;

  constructor(event: CatNamed) {
    this._event = event;
  }

  get catId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get catName(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CatAdopted extends ethereum.Event {
  get params(): CatAdopted__Params {
    return new CatAdopted__Params(this);
  }
}

export class CatAdopted__Params {
  _event: CatAdopted;

  constructor(event: CatAdopted) {
    this._event = event;
  }

  get catId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AdoptionOffered extends ethereum.Event {
  get params(): AdoptionOffered__Params {
    return new AdoptionOffered__Params(this);
  }
}

export class AdoptionOffered__Params {
  _event: AdoptionOffered;

  constructor(event: AdoptionOffered) {
    this._event = event;
  }

  get catId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AdoptionOfferCancelled extends ethereum.Event {
  get params(): AdoptionOfferCancelled__Params {
    return new AdoptionOfferCancelled__Params(this);
  }
}

export class AdoptionOfferCancelled__Params {
  _event: AdoptionOfferCancelled;

  constructor(event: AdoptionOfferCancelled) {
    this._event = event;
  }

  get catId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class AdoptionRequested extends ethereum.Event {
  get params(): AdoptionRequested__Params {
    return new AdoptionRequested__Params(this);
  }
}

export class AdoptionRequested__Params {
  _event: AdoptionRequested;

  constructor(event: AdoptionRequested) {
    this._event = event;
  }

  get catId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AdoptionRequestCancelled extends ethereum.Event {
  get params(): AdoptionRequestCancelled__Params {
    return new AdoptionRequestCancelled__Params(this);
  }
}

export class AdoptionRequestCancelled__Params {
  _event: AdoptionRequestCancelled;

  constructor(event: AdoptionRequestCancelled) {
    this._event = event;
  }

  get catId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class GenesisCatsAdded extends ethereum.Event {
  get params(): GenesisCatsAdded__Params {
    return new GenesisCatsAdded__Params(this);
  }
}

export class GenesisCatsAdded__Params {
  _event: GenesisCatsAdded;

  constructor(event: GenesisCatsAdded) {
    this._event = event;
  }

  get catIds(): Array<Bytes> {
    return this._event.parameters[0].value.toBytesArray();
  }
}

export class MoonCatRescue__getCatDetailsResult {
  value0: Bytes;
  value1: Address;
  value2: Bytes;
  value3: Address;
  value4: BigInt;
  value5: Address;
  value6: BigInt;

  constructor(
    value0: Bytes,
    value1: Address,
    value2: Bytes,
    value3: Address,
    value4: BigInt,
    value5: Address,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class MoonCatRescue__adoptionOffersResult {
  value0: boolean;
  value1: Bytes;
  value2: Address;
  value3: BigInt;
  value4: Address;

  constructor(
    value0: boolean,
    value1: Bytes,
    value2: Address,
    value3: BigInt,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }
}

export class MoonCatRescue__adoptionRequestsResult {
  value0: boolean;
  value1: Bytes;
  value2: Address;
  value3: BigInt;

  constructor(value0: boolean, value1: Bytes, value2: Address, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class MoonCatRescue extends ethereum.SmartContract {
  static bind(address: Address): MoonCatRescue {
    return new MoonCatRescue("MoonCatRescue", address);
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  remainingGenesisCats(): i32 {
    let result = super.call(
      "remainingGenesisCats",
      "remainingGenesisCats():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_remainingGenesisCats(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "remainingGenesisCats",
      "remainingGenesisCats():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  remainingCats(): i32 {
    let result = super.call("remainingCats", "remainingCats():(uint16)", []);

    return result[0].toI32();
  }

  try_remainingCats(): ethereum.CallResult<i32> {
    let result = super.tryCall("remainingCats", "remainingCats():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  mode(): i32 {
    let result = super.call("mode", "mode():(uint8)", []);

    return result[0].toI32();
  }

  try_mode(): ethereum.CallResult<i32> {
    let result = super.tryCall("mode", "mode():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getCatDetails(catId: Bytes): MoonCatRescue__getCatDetailsResult {
    let result = super.call(
      "getCatDetails",
      "getCatDetails(bytes5):(bytes5,address,bytes32,address,uint256,address,uint256)",
      [ethereum.Value.fromFixedBytes(catId)]
    );

    return new MoonCatRescue__getCatDetailsResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toBytes(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toAddress(),
      result[6].toBigInt()
    );
  }

  try_getCatDetails(
    catId: Bytes
  ): ethereum.CallResult<MoonCatRescue__getCatDetailsResult> {
    let result = super.tryCall(
      "getCatDetails",
      "getCatDetails(bytes5):(bytes5,address,bytes32,address,uint256,address,uint256)",
      [ethereum.Value.fromFixedBytes(catId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonCatRescue__getCatDetailsResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toBytes(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toAddress(),
        value[6].toBigInt()
      )
    );
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getCatOwners(): Array<Address> {
    let result = super.call("getCatOwners", "getCatOwners():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getCatOwners(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getCatOwners",
      "getCatOwners():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  catOwners(param0: Bytes): Address {
    let result = super.call("catOwners", "catOwners(bytes5):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toAddress();
  }

  try_catOwners(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("catOwners", "catOwners(bytes5):(address)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rescueOrder(param0: BigInt): Bytes {
    let result = super.call("rescueOrder", "rescueOrder(uint256):(bytes5)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_rescueOrder(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("rescueOrder", "rescueOrder(uint256):(bytes5)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  rescueCat(seed: Bytes): Bytes {
    let result = super.call("rescueCat", "rescueCat(bytes32):(bytes5)", [
      ethereum.Value.fromFixedBytes(seed)
    ]);

    return result[0].toBytes();
  }

  try_rescueCat(seed: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("rescueCat", "rescueCat(bytes32):(bytes5)", [
      ethereum.Value.fromFixedBytes(seed)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getCatIds(): Array<Bytes> {
    let result = super.call("getCatIds", "getCatIds():(bytes5[])", []);

    return result[0].toBytesArray();
  }

  try_getCatIds(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("getCatIds", "getCatIds():(bytes5[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  balanceOf(param0: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCatNames(): Array<Bytes> {
    let result = super.call("getCatNames", "getCatNames():(bytes32[])", []);

    return result[0].toBytesArray();
  }

  try_getCatNames(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("getCatNames", "getCatNames():(bytes32[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  adoptionOffers(param0: Bytes): MoonCatRescue__adoptionOffersResult {
    let result = super.call(
      "adoptionOffers",
      "adoptionOffers(bytes5):(bool,bytes5,address,uint256,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new MoonCatRescue__adoptionOffersResult(
      result[0].toBoolean(),
      result[1].toBytes(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toAddress()
    );
  }

  try_adoptionOffers(
    param0: Bytes
  ): ethereum.CallResult<MoonCatRescue__adoptionOffersResult> {
    let result = super.tryCall(
      "adoptionOffers",
      "adoptionOffers(bytes5):(bool,bytes5,address,uint256,address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonCatRescue__adoptionOffersResult(
        value[0].toBoolean(),
        value[1].toBytes(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toAddress()
      )
    );
  }

  catNames(param0: Bytes): Bytes {
    let result = super.call("catNames", "catNames(bytes5):(bytes32)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBytes();
  }

  try_catNames(param0: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("catNames", "catNames(bytes5):(bytes32)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getCatRequestPrices(): Array<BigInt> {
    let result = super.call(
      "getCatRequestPrices",
      "getCatRequestPrices():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getCatRequestPrices(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCatRequestPrices",
      "getCatRequestPrices():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  searchSeed(): Bytes {
    let result = super.call("searchSeed", "searchSeed():(bytes32)", []);

    return result[0].toBytes();
  }

  try_searchSeed(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("searchSeed", "searchSeed():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  imageGenerationCodeMD5(): Bytes {
    let result = super.call(
      "imageGenerationCodeMD5",
      "imageGenerationCodeMD5():(bytes16)",
      []
    );

    return result[0].toBytes();
  }

  try_imageGenerationCodeMD5(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "imageGenerationCodeMD5",
      "imageGenerationCodeMD5():(bytes16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  adoptionRequests(param0: Bytes): MoonCatRescue__adoptionRequestsResult {
    let result = super.call(
      "adoptionRequests",
      "adoptionRequests(bytes5):(bool,bytes5,address,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new MoonCatRescue__adoptionRequestsResult(
      result[0].toBoolean(),
      result[1].toBytes(),
      result[2].toAddress(),
      result[3].toBigInt()
    );
  }

  try_adoptionRequests(
    param0: Bytes
  ): ethereum.CallResult<MoonCatRescue__adoptionRequestsResult> {
    let result = super.tryCall(
      "adoptionRequests",
      "adoptionRequests(bytes5):(bool,bytes5,address,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonCatRescue__adoptionRequestsResult(
        value[0].toBoolean(),
        value[1].toBytes(),
        value[2].toAddress(),
        value[3].toBigInt()
      )
    );
  }

  getCatOfferPrices(): Array<BigInt> {
    let result = super.call(
      "getCatOfferPrices",
      "getCatOfferPrices():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getCatOfferPrices(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCatOfferPrices",
      "getCatOfferPrices():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  rescueIndex(): i32 {
    let result = super.call("rescueIndex", "rescueIndex():(uint16)", []);

    return result[0].toI32();
  }

  try_rescueIndex(): ethereum.CallResult<i32> {
    let result = super.tryCall("rescueIndex", "rescueIndex():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  pendingWithdrawals(param0: Address): BigInt {
    let result = super.call(
      "pendingWithdrawals",
      "pendingWithdrawals(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_pendingWithdrawals(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingWithdrawals",
      "pendingWithdrawals(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class MakeAdoptionOfferCall extends ethereum.Call {
  get inputs(): MakeAdoptionOfferCall__Inputs {
    return new MakeAdoptionOfferCall__Inputs(this);
  }

  get outputs(): MakeAdoptionOfferCall__Outputs {
    return new MakeAdoptionOfferCall__Outputs(this);
  }
}

export class MakeAdoptionOfferCall__Inputs {
  _call: MakeAdoptionOfferCall;

  constructor(call: MakeAdoptionOfferCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MakeAdoptionOfferCall__Outputs {
  _call: MakeAdoptionOfferCall;

  constructor(call: MakeAdoptionOfferCall) {
    this._call = call;
  }
}

export class ActivateCall extends ethereum.Call {
  get inputs(): ActivateCall__Inputs {
    return new ActivateCall__Inputs(this);
  }

  get outputs(): ActivateCall__Outputs {
    return new ActivateCall__Outputs(this);
  }
}

export class ActivateCall__Inputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class ActivateCall__Outputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class AcceptAdoptionOfferCall extends ethereum.Call {
  get inputs(): AcceptAdoptionOfferCall__Inputs {
    return new AcceptAdoptionOfferCall__Inputs(this);
  }

  get outputs(): AcceptAdoptionOfferCall__Outputs {
    return new AcceptAdoptionOfferCall__Outputs(this);
  }
}

export class AcceptAdoptionOfferCall__Inputs {
  _call: AcceptAdoptionOfferCall;

  constructor(call: AcceptAdoptionOfferCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class AcceptAdoptionOfferCall__Outputs {
  _call: AcceptAdoptionOfferCall;

  constructor(call: AcceptAdoptionOfferCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class RescueCatCall extends ethereum.Call {
  get inputs(): RescueCatCall__Inputs {
    return new RescueCatCall__Inputs(this);
  }

  get outputs(): RescueCatCall__Outputs {
    return new RescueCatCall__Outputs(this);
  }
}

export class RescueCatCall__Inputs {
  _call: RescueCatCall;

  constructor(call: RescueCatCall) {
    this._call = call;
  }

  get seed(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RescueCatCall__Outputs {
  _call: RescueCatCall;

  constructor(call: RescueCatCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CancelAdoptionOfferCall extends ethereum.Call {
  get inputs(): CancelAdoptionOfferCall__Inputs {
    return new CancelAdoptionOfferCall__Inputs(this);
  }

  get outputs(): CancelAdoptionOfferCall__Outputs {
    return new CancelAdoptionOfferCall__Outputs(this);
  }
}

export class CancelAdoptionOfferCall__Inputs {
  _call: CancelAdoptionOfferCall;

  constructor(call: CancelAdoptionOfferCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelAdoptionOfferCall__Outputs {
  _call: CancelAdoptionOfferCall;

  constructor(call: CancelAdoptionOfferCall) {
    this._call = call;
  }
}

export class NameCatCall extends ethereum.Call {
  get inputs(): NameCatCall__Inputs {
    return new NameCatCall__Inputs(this);
  }

  get outputs(): NameCatCall__Outputs {
    return new NameCatCall__Outputs(this);
  }
}

export class NameCatCall__Inputs {
  _call: NameCatCall;

  constructor(call: NameCatCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get catName(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class NameCatCall__Outputs {
  _call: NameCatCall;

  constructor(call: NameCatCall) {
    this._call = call;
  }
}

export class ActivateInTestModeCall extends ethereum.Call {
  get inputs(): ActivateInTestModeCall__Inputs {
    return new ActivateInTestModeCall__Inputs(this);
  }

  get outputs(): ActivateInTestModeCall__Outputs {
    return new ActivateInTestModeCall__Outputs(this);
  }
}

export class ActivateInTestModeCall__Inputs {
  _call: ActivateInTestModeCall;

  constructor(call: ActivateInTestModeCall) {
    this._call = call;
  }
}

export class ActivateInTestModeCall__Outputs {
  _call: ActivateInTestModeCall;

  constructor(call: ActivateInTestModeCall) {
    this._call = call;
  }
}

export class CancelAdoptionRequestCall extends ethereum.Call {
  get inputs(): CancelAdoptionRequestCall__Inputs {
    return new CancelAdoptionRequestCall__Inputs(this);
  }

  get outputs(): CancelAdoptionRequestCall__Outputs {
    return new CancelAdoptionRequestCall__Outputs(this);
  }
}

export class CancelAdoptionRequestCall__Inputs {
  _call: CancelAdoptionRequestCall;

  constructor(call: CancelAdoptionRequestCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelAdoptionRequestCall__Outputs {
  _call: CancelAdoptionRequestCall;

  constructor(call: CancelAdoptionRequestCall) {
    this._call = call;
  }
}

export class DisableBeforeActivationCall extends ethereum.Call {
  get inputs(): DisableBeforeActivationCall__Inputs {
    return new DisableBeforeActivationCall__Inputs(this);
  }

  get outputs(): DisableBeforeActivationCall__Outputs {
    return new DisableBeforeActivationCall__Outputs(this);
  }
}

export class DisableBeforeActivationCall__Inputs {
  _call: DisableBeforeActivationCall;

  constructor(call: DisableBeforeActivationCall) {
    this._call = call;
  }
}

export class DisableBeforeActivationCall__Outputs {
  _call: DisableBeforeActivationCall;

  constructor(call: DisableBeforeActivationCall) {
    this._call = call;
  }
}

export class AddGenesisCatGroupCall extends ethereum.Call {
  get inputs(): AddGenesisCatGroupCall__Inputs {
    return new AddGenesisCatGroupCall__Inputs(this);
  }

  get outputs(): AddGenesisCatGroupCall__Outputs {
    return new AddGenesisCatGroupCall__Outputs(this);
  }
}

export class AddGenesisCatGroupCall__Inputs {
  _call: AddGenesisCatGroupCall;

  constructor(call: AddGenesisCatGroupCall) {
    this._call = call;
  }
}

export class AddGenesisCatGroupCall__Outputs {
  _call: AddGenesisCatGroupCall;

  constructor(call: AddGenesisCatGroupCall) {
    this._call = call;
  }
}

export class MakeAdoptionOfferToAddressCall extends ethereum.Call {
  get inputs(): MakeAdoptionOfferToAddressCall__Inputs {
    return new MakeAdoptionOfferToAddressCall__Inputs(this);
  }

  get outputs(): MakeAdoptionOfferToAddressCall__Outputs {
    return new MakeAdoptionOfferToAddressCall__Outputs(this);
  }
}

export class MakeAdoptionOfferToAddressCall__Inputs {
  _call: MakeAdoptionOfferToAddressCall;

  constructor(call: MakeAdoptionOfferToAddressCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class MakeAdoptionOfferToAddressCall__Outputs {
  _call: MakeAdoptionOfferToAddressCall;

  constructor(call: MakeAdoptionOfferToAddressCall) {
    this._call = call;
  }
}

export class AcceptAdoptionRequestCall extends ethereum.Call {
  get inputs(): AcceptAdoptionRequestCall__Inputs {
    return new AcceptAdoptionRequestCall__Inputs(this);
  }

  get outputs(): AcceptAdoptionRequestCall__Outputs {
    return new AcceptAdoptionRequestCall__Outputs(this);
  }
}

export class AcceptAdoptionRequestCall__Inputs {
  _call: AcceptAdoptionRequestCall;

  constructor(call: AcceptAdoptionRequestCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class AcceptAdoptionRequestCall__Outputs {
  _call: AcceptAdoptionRequestCall;

  constructor(call: AcceptAdoptionRequestCall) {
    this._call = call;
  }
}

export class MakeAdoptionRequestCall extends ethereum.Call {
  get inputs(): MakeAdoptionRequestCall__Inputs {
    return new MakeAdoptionRequestCall__Inputs(this);
  }

  get outputs(): MakeAdoptionRequestCall__Outputs {
    return new MakeAdoptionRequestCall__Outputs(this);
  }
}

export class MakeAdoptionRequestCall__Inputs {
  _call: MakeAdoptionRequestCall;

  constructor(call: MakeAdoptionRequestCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class MakeAdoptionRequestCall__Outputs {
  _call: MakeAdoptionRequestCall;

  constructor(call: MakeAdoptionRequestCall) {
    this._call = call;
  }
}

export class GiveCatCall extends ethereum.Call {
  get inputs(): GiveCatCall__Inputs {
    return new GiveCatCall__Inputs(this);
  }

  get outputs(): GiveCatCall__Outputs {
    return new GiveCatCall__Outputs(this);
  }
}

export class GiveCatCall__Inputs {
  _call: GiveCatCall;

  constructor(call: GiveCatCall) {
    this._call = call;
  }

  get catId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GiveCatCall__Outputs {
  _call: GiveCatCall;

  constructor(call: GiveCatCall) {
    this._call = call;
  }
}
